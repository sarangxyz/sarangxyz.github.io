<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C++ on a few notes..</title><link>https://www.variadic.xyz/tags/c++/</link><description>Recent content in C++ on a few notes..</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 18 Oct 2021 19:50:00 +0000</lastBuildDate><atom:link href="https://www.variadic.xyz/tags/c++/index.xml" rel="self" type="application/rss+xml"/><item><title>converting between various strings in c++</title><link>https://www.variadic.xyz/2021/10/18/cpp-string-convert/</link><pubDate>Mon, 18 Oct 2021 19:50:00 +0000</pubDate><guid>https://www.variadic.xyz/2021/10/18/cpp-string-convert/</guid><description>converting between various strings in c++</description></item><item><title>cpp17 std parallel algo</title><link>https://www.variadic.xyz/2019/08/28/cpp17-std-parallel-algo/</link><pubDate>Wed, 28 Aug 2019 00:00:00 +0000</pubDate><guid>https://www.variadic.xyz/2019/08/28/cpp17-std-parallel-algo/</guid><description>notes on cpp17 std parallel algo</description></item><item><title>constexpr vs C++ Template Metaprogramming</title><link>https://www.variadic.xyz/2019/07/03/constexpr2/</link><pubDate>Wed, 03 Jul 2019 00:00:00 +0000</pubDate><guid>https://www.variadic.xyz/2019/07/03/constexpr2/</guid><description>c++17 constexpr fns vs c++ template metaprograms</description></item><item><title>hashing std::pair and std::tuple</title><link>https://www.variadic.xyz/post/0120-hashing-tuples/</link><pubDate>Mon, 15 Jan 2018 22:34:59 -0800</pubDate><guid>https://www.variadic.xyz/post/0120-hashing-tuples/</guid><description>how to has container objects (in this case pair and tuple) to be used with std::containers</description></item><item><title>C++11 thread safe statics</title><link>https://www.variadic.xyz/2017/06/20/cpp11-threadsafe-statics/</link><pubDate>Tue, 20 Jun 2017 10:54:24 +0200</pubDate><guid>https://www.variadic.xyz/2017/06/20/cpp11-threadsafe-statics/</guid><description>how c++11 threadsafe statics are implemented under the hood</description></item><item><title>C++ Template Metaprogramming Part 2 of n</title><link>https://www.variadic.xyz/2014/08/04/c-template-metaprogramming-part-2-of-n/</link><pubDate>Mon, 04 Aug 2014 00:00:00 +0000</pubDate><guid>https://www.variadic.xyz/2014/08/04/c-template-metaprogramming-part-2-of-n/</guid><description>notes on C++ Template Metaprogramming</description></item><item><title>C++11 constexpr: computing exp at compile time</title><link>https://www.variadic.xyz/2014/07/06/c11-constexpr-computing-exp-at-compile-time/</link><pubDate>Sun, 06 Jul 2014 00:00:00 +0000</pubDate><guid>https://www.variadic.xyz/2014/07/06/c11-constexpr-computing-exp-at-compile-time/</guid><description>compile time computing with C++11 constexpr</description></item><item><title>C++11: polymorphic function objects</title><link>https://www.variadic.xyz/2014/07/01/c11-polymorphic-function-objects/</link><pubDate>Tue, 01 Jul 2014 00:00:00 +0000</pubDate><guid>https://www.variadic.xyz/2014/07/01/c11-polymorphic-function-objects/</guid><description>notes on C++11 polymorphic function objects</description></item><item><title>C++ and explicit constructors</title><link>https://www.variadic.xyz/2012/04/03/c-and-explicit-constructors/</link><pubDate>Tue, 03 Apr 2012 00:00:00 +0000</pubDate><guid>https://www.variadic.xyz/2012/04/03/c-and-explicit-constructors/</guid><description>some details on why C++11 explicit constructors were introduced in language</description></item><item><title>C++11: delegating constructors</title><link>https://www.variadic.xyz/2012/01/17/c11-delegating-constructors/</link><pubDate>Tue, 17 Jan 2012 00:00:00 +0000</pubDate><guid>https://www.variadic.xyz/2012/01/17/c11-delegating-constructors/</guid><description>notes on C++11 delegating constuctors and a few details</description></item><item><title>C++ Template Metaprogramming</title><link>https://www.variadic.xyz/2012/01/07/c-template-metaprogramming/</link><pubDate>Sat, 07 Jan 2012 00:00:00 +0000</pubDate><guid>https://www.variadic.xyz/2012/01/07/c-template-metaprogramming/</guid><description>notes on C++ template metaprogramming</description></item><item><title>C++11: defaulted and deleted functions</title><link>https://www.variadic.xyz/2012/01/05/c11-defaulted-and-deleted-functions/</link><pubDate>Thu, 05 Jan 2012 00:00:00 +0000</pubDate><guid>https://www.variadic.xyz/2012/01/05/c11-defaulted-and-deleted-functions/</guid><description>notes on C++11 defaulted and deleted functions</description></item><item><title>C++11: enum classes</title><link>https://www.variadic.xyz/2012/01/04/enum-classes/</link><pubDate>Wed, 04 Jan 2012 00:00:00 +0000</pubDate><guid>https://www.variadic.xyz/2012/01/04/enum-classes/</guid><description>notes on C++11 enum classes</description></item><item><title>A Guide to Undefined Behavior in C and C++</title><link>https://www.variadic.xyz/2011/12/30/a-guide-to-undefined-behavior-in-c-and-c/</link><pubDate>Fri, 30 Dec 2011 00:00:00 +0000</pubDate><guid>https://www.variadic.xyz/2011/12/30/a-guide-to-undefined-behavior-in-c-and-c/</guid><description>a guide to undefined behavior</description></item><item><title>C++11 lambda- having fun with brackets!</title><link>https://www.variadic.xyz/2011/10/12/c11-lambda-having-fun-with-brackets/</link><pubDate>Wed, 12 Oct 2011 00:00:00 +0000</pubDate><guid>https://www.variadic.xyz/2011/10/12/c11-lambda-having-fun-with-brackets/</guid><description>notes on lambdas as introduced in C++11</description></item><item><title>Multithreading in C++11 - part 2</title><link>https://www.variadic.xyz/2011/09/18/multithreading-in-c11-part-2/</link><pubDate>Sun, 18 Sep 2011 00:00:00 +0000</pubDate><guid>https://www.variadic.xyz/2011/09/18/multithreading-in-c11-part-2/</guid><description>multithreading in C++11 with std::thread</description></item><item><title>Multithreading in C# - part 1</title><link>https://www.variadic.xyz/2011/09/16/multithreading-in-c-part-1/</link><pubDate>Fri, 16 Sep 2011 00:00:00 +0000</pubDate><guid>https://www.variadic.xyz/2011/09/16/multithreading-in-c-part-1/</guid><description>Multithreading in C#</description></item><item><title>Multithreading in C++11 - part 1</title><link>https://www.variadic.xyz/2011/09/16/multithreading-in-c11-part-1/</link><pubDate>Fri, 16 Sep 2011 00:00:00 +0000</pubDate><guid>https://www.variadic.xyz/2011/09/16/multithreading-in-c11-part-1/</guid><description>multithreading in C++11 with std::thread</description></item><item><title>C++0x is an international standard</title><link>https://www.variadic.xyz/2011/08/13/c0x-is-an-international-standard/</link><pubDate>Sat, 13 Aug 2011 00:00:00 +0000</pubDate><guid>https://www.variadic.xyz/2011/08/13/c0x-is-an-international-standard/</guid><description>finally there is C++11 :)</description></item><item><title>vector: reserve with care</title><link>https://www.variadic.xyz/2011/07/26/vector-reserve-with-care/</link><pubDate>Tue, 26 Jul 2011 00:00:00 +0000</pubDate><guid>https://www.variadic.xyz/2011/07/26/vector-reserve-with-care/</guid><description>notes on how vector resizing with pre-allocation can tank performance</description></item><item><title>dissecting any</title><link>https://www.variadic.xyz/2011/07/07/dissecting-any/</link><pubDate>Thu, 07 Jul 2011 00:00:00 +0000</pubDate><guid>https://www.variadic.xyz/2011/07/07/dissecting-any/</guid><description>notes on implementing any and performance characteristics</description></item><item><title>callable entity</title><link>https://www.variadic.xyz/2011/05/31/callable-entity/</link><pubDate>Tue, 31 May 2011 00:00:00 +0000</pubDate><guid>https://www.variadic.xyz/2011/05/31/callable-entity/</guid><description>notes about callable entities, not necessarily just functions are callables</description></item><item><title>auto and decltype</title><link>https://www.variadic.xyz/2011/05/28/auto-and-decltype/</link><pubDate>Sat, 28 May 2011 00:00:00 +0000</pubDate><guid>https://www.variadic.xyz/2011/05/28/auto-and-decltype/</guid><description>c++11 type inference mechanism with auto &amp;amp; decltype</description></item><item><title>range based for-loop</title><link>https://www.variadic.xyz/2011/05/26/range-based-for-loop/</link><pubDate>Thu, 26 May 2011 00:00:00 +0000</pubDate><guid>https://www.variadic.xyz/2011/05/26/range-based-for-loop/</guid><description>c++11 syntactic sugar for-loop, makes code lot readable</description></item><item><title>tuple</title><link>https://www.variadic.xyz/2011/05/12/tuple/</link><pubDate>Thu, 12 May 2011 00:00:00 +0000</pubDate><guid>https://www.variadic.xyz/2011/05/12/tuple/</guid><description>a short note on std::tuple and it&amp;rsquo;s usage</description></item><item><title>boost::any</title><link>https://www.variadic.xyz/2011/05/10/boostany/</link><pubDate>Tue, 10 May 2011 00:00:00 +0000</pubDate><guid>https://www.variadic.xyz/2011/05/10/boostany/</guid><description>any provides for heterogneous containers, uses type-erasure</description></item><item><title>Type Erasure</title><link>https://www.variadic.xyz/2011/05/09/type-erasure/</link><pubDate>Mon, 09 May 2011 00:00:00 +0000</pubDate><guid>https://www.variadic.xyz/2011/05/09/type-erasure/</guid><description>type erasure as a programming technique to bend c++ type system to implement auto and std::function features</description></item><item><title>template function to determine size of an array</title><link>https://www.variadic.xyz/2011/05/07/template-function-to-determine-size-of-an-array/</link><pubDate>Sat, 07 May 2011 00:00:00 +0000</pubDate><guid>https://www.variadic.xyz/2011/05/07/template-function-to-determine-size-of-an-array/</guid><description>a hadny function to determine size of an static-array at compile time, instead of a macro</description></item><item><title>C++11: auto</title><link>https://www.variadic.xyz/2011/05/04/auto/</link><pubDate>Wed, 04 May 2011 00:00:00 +0000</pubDate><guid>https://www.variadic.xyz/2011/05/04/auto/</guid><description>c++11 type inferencing syntax sugar-&amp;gt; auto</description></item><item><title>C++ Templates – An Introduction</title><link>https://www.variadic.xyz/2011/05/02/c-templates-an-introduction/</link><pubDate>Mon, 02 May 2011 00:00:00 +0000</pubDate><guid>https://www.variadic.xyz/2011/05/02/c-templates-an-introduction/</guid><description>a short post on c++ templates basics, an intro</description></item><item><title>static_assert</title><link>https://www.variadic.xyz/2011/05/02/static_assert/</link><pubDate>Mon, 02 May 2011 00:00:00 +0000</pubDate><guid>https://www.variadic.xyz/2011/05/02/static_assert/</guid><description>compile time assertions in c++11</description></item></channel></rss>